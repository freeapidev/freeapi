name: Node.js Package

on:
  push:
    branches:
      - main

jobs:
  check-changes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Check for Changes
        id: check
        run: |
          # Fetch recent commits
          git fetch origin main

          # Get the list of changed files in the current commit
          changes=$(git diff --name-only HEAD HEAD^)
          echo "Changed files: $changes"
          
          # Determine if relevant files have changed
          if echo "$changes" | grep -E '^(package/|README\.md)$' > /dev/null; then
            echo "Changes detected in package or README.md"
            echo "::set-output name=publish::true"
          else
            echo "No relevant changes detected"
            echo "::set-output name=publish::false"
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-changes
    if: needs.check-changes.outputs.publish == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: |
          cd package
          npm i
          npm run build

  bump-version:
    runs-on: ubuntu-latest
    needs: build
    if: needs.check-changes.outputs.publish == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Bump Version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp ./README.md ./package/README.md
          cd package

          # Get the current version from package.json
          current_version=$(jq -r .version package.json)

          # Get the latest published version from npm
          npm_version=$(npm show . version)

          echo "Current version in package.json: $current_version"
          echo "Published version on npm: $npm_version"

          if [ "$current_version" == "$npm_version" ]; then
            echo "Versions are the same, bumping version..."
            
            # Bump the version by 0.0.1
            npm version patch --no-git-tag-version

            # Commit the version bump
            git config --global user.email "info@freeapi.dev"
            git config --global user.name "FreeAPI Developer"
            git add package.json
            git commit -m "Bump version to $(jq -r .version package.json)"

            # Push the version bump commit using the GITHUB_TOKEN
            git push https://x-access-token:${GITHUB_TOKEN}@github.com/freeapidev/freeapi.git HEAD:main
          else
            echo "Version in package.json is ahead of npm, no need to bump version."
          fi

  publish:
    runs-on: ubuntu-latest
    needs: bump-version
    if: needs.check-changes.outputs.publish == 'true'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
      - name: Publish to NPM
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}
        run: |
          cd package
          npm i
          npm run build
          npm publish --access public